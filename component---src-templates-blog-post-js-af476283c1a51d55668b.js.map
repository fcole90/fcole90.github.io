{"version":3,"sources":["webpack:///./src/components/header.module.css","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","ListLink","props","className","moduleStyle","link_list_li","to","header_link","header_link_text","children","Header","header","navbar","link_list","link_list_li_home","join","style","whiteSpace","defaultProps","siteTitle","siteAuthor","Layout","data","site","siteMetadata","title","author","mainClassName","Date","getFullYear","href","BlogPost","post","markdownRemark","frontmatter","dangerouslySetInnerHTML","__html","html","query"],"mappings":"6MACAA,EAAOC,QAAU,CAAC,OAAS,+BAA+B,OAAS,+BAA+B,YAAc,oCAAoC,iBAAmB,yCAAyC,iBAAmB,yCAAyC,aAAe,qCAAqC,UAAY,kCAAkC,aAAe,qCAAqC,oBAAsB,4CAA4C,kBAAoB,4C,iICKlfC,EAAW,SAACC,GAAD,OACf,wBAAIC,UAAWC,IAAYC,cACzB,kBAAC,OAAD,CAAMC,GAAIJ,EAAMI,GAAIH,UAAWC,IAAYG,aACzC,wBAAIJ,UAAWC,IAAYI,kBAAmBN,EAAMO,aAKpDC,EAAS,kBACb,4BAAQP,UAAWC,IAAYO,QAC7B,yBAAKR,UAAWC,IAAYQ,QAC5B,wBAAIT,UAAWC,IAAYS,WAEzB,wBAAIV,UAAW,CACbC,IAAYC,aACZD,IAAYU,mBACZC,KAAK,MAEL,kBAAC,OAAD,CAAMZ,UAAWC,IAAYG,YAAaD,GAAE,KAC1C,wBAAIH,UAAWC,IAAYI,iBAAkBQ,MAAO,CAACC,WAAY,WAC9D,aAIP,kBAAC,EAAD,CAAUX,GAAI,UAAd,aAWNI,EAAOQ,aAAe,CACpBC,UAAU,GACVC,WAAW,IAGEV,Q,UCFAW,IA9BA,SAAC,GAAyB,IAAvBnB,EAAsB,EAAtBA,MAAOO,EAAe,EAAfA,SACjBa,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQH,UAAWG,EAAKC,KAAKC,aAAaC,MAAOL,WAAYE,EAAKC,KAAKC,aAAaE,SACpF,yBAAKvB,UAAW,oBACd,0BAAMA,UAAWD,GAASA,EAAMyB,cAAgBzB,EAAMyB,cAAsB,IAAKlB,GACjF,sCACK,IAAImB,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,kCCjCV,0HAGe,SAASC,EAAT,GAA6B,IACpCC,EADmC,EAARV,KACfW,eAClB,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKD,EAAKE,YAAYT,OACtB,yBAAKU,wBAAyB,CAAEC,OAAQJ,EAAKK,UAK9C,IAAMC,EAAK","file":"component---src-templates-blog-post-js-af476283c1a51d55668b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header-module--header--2Q3RK\",\"navbar\":\"header-module--navbar--2ahDN\",\"header_link\":\"header-module--header_link--1pMvR\",\"header_link_text\":\"header-module--header_link_text--3HCVw\",\"avatar_container\":\"header-module--avatar_container--3yqXf\",\"home_link_h2\":\"header-module--home_link_h2--ECGUh\",\"link_list\":\"header-module--link_list--18lJH\",\"link_list_li\":\"header-module--link_list_li--acJT3\",\"link_list_li_avatar\":\"header-module--link_list_li_avatar--39chb\",\"link_list_li_home\":\"header-module--link_list_li_home--3K0Fm\"};","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n// import AvatarPic from \"./avatar\"\nimport moduleStyle from \"./header.module.css\"\n\nconst ListLink = (props) => (\n  <li className={moduleStyle.link_list_li}>\n    <Link to={props.to} className={moduleStyle.header_link}>\n      <h2 className={moduleStyle.header_link_text}>{props.children}</h2>\n    </Link>\n  </li>\n)\n\nconst Header = () => (\n  <header className={moduleStyle.header}>\n    <nav className={moduleStyle.navbar}>\n    <ul className={moduleStyle.link_list}>\n\n      <li className={[\n        moduleStyle.link_list_li,\n        moduleStyle.link_list_li_home\n      ].join(\" \")\n      }>\n        <Link className={moduleStyle.header_link} to={`/`}>\n          <h2 className={moduleStyle.header_link_text} style={{whiteSpace: \"nowrap\"}}>\n            {\"fcole90\"}\n          </h2>\n        </Link>\n      </li>\n      <ListLink to={'/about'}>About</ListLink>\n    </ul>\n    </nav>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  siteAuthor: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  siteAuthor: ``\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ props, children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title, author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} siteAuthor={data.site.siteMetadata.author}/>\n      <div className={\"layout_container\"}>\n        <main className={props ? (props.mainClassName ? props.mainClassName : \"\") : \"\"}>{children}</main>\n        <footer>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nexport default function BlogPost({ data }) {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}